{"version":3,"sources":["imgs/cat.jpg","imgs/dog.jpg","imgs/eagle.jpg","imgs/elephant.jpg","imgs/grasshopper.jpg","imgs/octopus.jpg","imgs/owl.jpg","imgs/panda.jpg","imgs/tiger.jpg","imgs/whale.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","imgs","cat","dog","eagle","elephant","grasshopper","octopus","owl","panda","tiger","whale","gData","nodes","map","img","id","color","name","links","Array","length","keys","filter","source","target","Math","round","random","className","graphData","nodeThreeObject","imgTexture","THREE","load","material","sprite","scale","set","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,wCCA1B,MAA0B,oCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kC,QC4E1BA,MA5Df,WACE,IAAMC,EAAO,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAOIC,EAAQ,CACZC,MAAOZ,EAAKa,KAAI,SAACC,EAAKC,GAAN,MAAc,CAAEA,KAAIC,MAAO,UAAWC,KAHtD,8FAGiEH,UACjEI,MAAO,YAAIC,MAAMnB,EAAKoB,QAAQC,QAC3BC,QAAO,SAACP,GAAD,OAAQA,KACfF,KAAI,SAACE,GAAD,MAAS,CACZQ,OAAQR,EACRS,OAAQC,KAAKC,MAAMD,KAAKE,UAAYZ,EAAK,SAI/C,OACE,qBAAKa,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,UAAWlB,EACXmB,gBAAiB,YAA+B,IAA5BhB,EAA2B,EAA3BA,IACZiB,GADuC,EAAtBhB,GAAsB,EAAlBC,MAAkB,EAAXC,MACf,IAAIe,KAAsBC,KAA1B,UAAkCnB,KAC/CoB,EAAW,IAAIF,IAAqB,CAAEnB,IAAKkB,IAC3CI,EAAS,IAAIH,IAAaE,GAGhC,OADAC,EAAOC,MAAMC,IAAI,GAAI,IACdF,QC1CFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c4362b72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cat.1cec6b41.jpg\";","export default __webpack_public_path__ + \"static/media/dog.faa9a8ea.jpg\";","export default __webpack_public_path__ + \"static/media/eagle.1a84eace.jpg\";","export default __webpack_public_path__ + \"static/media/elephant.e8f7f3a0.jpg\";","export default __webpack_public_path__ + \"static/media/grasshopper.b79aa4a9.jpg\";","export default __webpack_public_path__ + \"static/media/octopus.469d1be6.jpg\";","export default __webpack_public_path__ + \"static/media/owl.1226bc80.jpg\";","export default __webpack_public_path__ + \"static/media/panda.9c999762.jpg\";","export default __webpack_public_path__ + \"static/media/tiger.aa0b28f1.jpg\";","export default __webpack_public_path__ + \"static/media/whale.74960436.jpg\";","import \"./App.css\";\r\nimport { ForceGraph3D } from \"react-force-graph\";\r\n//import myData from \"./data.json\";\r\nimport * as THREE from \"three\";\r\n//import { CSS2DRenderer, CSS2DObject } from \"three-css2drender\";\r\nimport cat from \"./imgs/cat.jpg\";\r\nimport dog from \"./imgs/dog.jpg\";\r\nimport eagle from \"./imgs/eagle.jpg\";\r\nimport elephant from \"./imgs/elephant.jpg\";\r\nimport grasshopper from \"./imgs/grasshopper.jpg\";\r\nimport octopus from \"./imgs/octopus.jpg\";\r\nimport owl from \"./imgs/owl.jpg\";\r\nimport panda from \"./imgs/panda.jpg\";\r\nimport tiger from \"./imgs/tiger.jpg\";\r\nimport whale from \"./imgs/whale.jpg\";\r\n\r\nfunction App() {\r\n  const imgs = [\r\n    cat,\r\n    dog,\r\n    eagle,\r\n    elephant,\r\n    grasshopper,\r\n    octopus,\r\n    owl,\r\n    panda,\r\n    tiger,\r\n    whale,\r\n  ];\r\n\r\n  // Random connected graph\r\n  const ele =\r\n    \"<div class='node-label'><h1>Author: PPF</h1><ul><li>data: 1</li><li>data: 2</li></ul></div>\";\r\n\r\n  const gData = {\r\n    nodes: imgs.map((img, id) => ({ id, color: \"#00ff00\", name: ele, img })),\r\n    links: [...Array(imgs.length).keys()]\r\n      .filter((id) => id)\r\n      .map((id) => ({\r\n        source: id,\r\n        target: Math.round(Math.random() * (id - 1)),\r\n      })),\r\n  };\r\n  //const extraRenderers = [new CSS2DRenderer()];\r\n  return (\r\n    <div className=\"App\">\r\n      <ForceGraph3D\r\n        graphData={gData}\r\n        nodeThreeObject={({ img, id, color, name }) => {\r\n          const imgTexture = new THREE.TextureLoader().load(`${img}`);\r\n          const material = new THREE.SpriteMaterial({ map: imgTexture });\r\n          const sprite = new THREE.Sprite(material);\r\n\r\n          sprite.scale.set(12, 12);\r\n          return sprite;\r\n\r\n          //const nodeEl = document.createElement(\"div\");\r\n          //nodeEl.textContent = name;\r\n          //nodeEl.style.color = color;\r\n          //nodeEl.className = \"node-label\";\r\n          //return new CSS2DObject(nodeEl);\r\n        }}\r\n        //nodeThreeObjectExtend={true}\r\n      />\r\n      {\r\n        //<ForceGraph3D\r\n        //width=\"100%\"\r\n        //height=\"600\"\r\n        //backgroundColor=\"#333\"\r\n        //graphData={myData}\r\n        ///>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}