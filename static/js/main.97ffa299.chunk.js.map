{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","imgs","gData","nodes","map","img","id","color","name","links","Array","length","keys","filter","source","target","Math","round","random","CSS2DRenderer","className","graphData","nodeThreeObject","imgTexture","THREE","load","material","sprite","scale","set","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA0EeA,MAlEf,WACE,IAAMC,EAAO,CACX,UACA,UACA,YACA,eACA,kBACA,cACA,UACA,YACA,eACA,YACA,aAOIC,EAAQ,CACZC,MAAOF,EAAKG,KAAI,SAACC,EAAKC,GAAN,MAAc,CAAEA,KAAIC,MAAO,UAAWC,KAHtD,8FAGiEH,UACjEI,MAAO,YAAIC,MAAMT,EAAKU,QAAQC,QAC3BC,QAAO,SAACP,GAAD,OAAQA,KACfF,KAAI,SAACE,GAAD,MAAS,CACZQ,OAAQR,EACRS,OAAQC,KAAKC,MAAMD,KAAKE,UAAYZ,EAAK,SAI/C,OADwB,IAAIa,gBAE1B,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,UAAWnB,EACXoB,gBAAiB,YAA+B,IAA5BjB,EAA2B,EAA3BA,IACZkB,GADuC,EAAtBjB,GAAsB,EAAlBC,MAAkB,EAAXC,MACf,IAAIgB,iBAAsBC,KAA1B,iBAAyCpB,KACtDqB,EAAW,IAAIF,iBAAqB,CAAEpB,IAAKmB,IAC3CI,EAAS,IAAIH,SAAaE,GAQhC,OADAC,EAAOC,MAAMC,IAAI,GAAI,IACdF,QCxCFG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.97ffa299.chunk.js","sourcesContent":["import \"./App.css\";\nimport { ForceGraph3D } from \"react-force-graph\";\n//import myData from \"./data.json\";\nimport * as THREE from \"three\";\n//import { } from \"three/examples/js/renderers/CSS2DRenderer\";\n//import { CSS2DObject } from \"three/examples/js/renderers/CSS2DRenderer\";\nimport { CSS2DRenderer, CSS2DObject } from \"three-css2drender\";\n\nfunction App() {\n  const imgs = [\n    \"cat.jpg\",\n    \"dog.jpg\",\n    \"eagle.jpg\",\n    \"elephant.jpg\",\n    \"grasshopper.jpg\",\n    \"octopus.jpg\",\n    \"owl.jpg\",\n    \"panda.jpg\",\n    \"squirrel.jpg\",\n    \"tiger.jpg\",\n    \"whale.jpg\",\n  ];\n\n  // Random connected graph\n  const ele =\n    \"<div class='node-label'><h1>Author: XXX</h1><ul><li>data: 1</li><li>data: 2</li></ul></div>\";\n\n  const gData = {\n    nodes: imgs.map((img, id) => ({ id, color: \"#00ff00\", name: ele, img })),\n    links: [...Array(imgs.length).keys()]\n      .filter((id) => id)\n      .map((id) => ({\n        source: id,\n        target: Math.round(Math.random() * (id - 1)),\n      })),\n  };\n  const extraRenderers = [new CSS2DRenderer()];\n  return (\n    <div className=\"App\">\n      <ForceGraph3D\n        graphData={gData}\n        nodeThreeObject={({ img, id, color, name }) => {\n          const imgTexture = new THREE.TextureLoader().load(`./imgs/${img}`);\n          const material = new THREE.SpriteMaterial({ map: imgTexture });\n          const sprite = new THREE.Sprite(material);\n\n          //var geometry = new THREE.BoxGeometry(1, 1, 1);\n          //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n          //var cube = new THREE.Mesh(geometry, material);\n          //sprite.add(cube);\n\n          sprite.scale.set(12, 12);\n          return sprite;\n\n          //const nodeEl = document.createElement(\"div\");\n          //nodeEl.textContent = name;\n          //nodeEl.style.color = color;\n          //nodeEl.className = \"node-label\";\n          //return new CSS2DObject(nodeEl);\n        }}\n        //nodeThreeObjectExtend={true}\n      />\n      {\n        //<ForceGraph3D\n        //width=\"100%\"\n        //height=\"600\"\n        //backgroundColor=\"#333\"\n        //graphData={myData}\n        ///>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}